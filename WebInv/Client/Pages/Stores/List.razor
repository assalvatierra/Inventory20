@page "/Stores"
@attribute [Authorize]
@inject HttpClient Http


<h3>InvStores</h3>

@if (stores == null)
{
    <div class="spinner-border" role="status">
    </div>
    <span class="visually-hidden">Loading...</span>
}
else
{
    <p><a href="/StoreAdd" class="btn btn-primary">Add New Store</a></p>

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Store</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var store in stores)
            {
                <tr>
                    <td>@store.Id</td>
                    <td>@store.StoreName</td>
                    <td>
                        <a href="/Stores/Edit/@store.Id" class="btn btn-light">Edit</a>
                        <a href="/Stores/Details/@store.Id" class="btn btn-light">Details</a>
                        <a href="/Stores/Delete/@store.Id" class="btn btn-light">Delete</a>
                    </td>

                </tr>
            }
        </tbody>
    </table>
}

@code {
    private InvStore[] stores;

    protected override async Task OnInitializedAsync()
    {

        try
        {
            stores = await Http.GetFromJsonAsync<InvStore[]>("api/InvStores");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

}
