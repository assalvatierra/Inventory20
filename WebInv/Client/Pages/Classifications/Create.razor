@page "/Classifications/Create"
@inject HttpClient Http
@inject NavigationManager NavHelper

<h3>Create Classification</h3>
<p>
    <div class=""></div>
    <a href="/Classifications">
        <span class="oi oi-arrow-left" title="arrow-left" aria-hidden="true"></span>
        Back to List
    </a>
</p>
<hr />
<div class="col-md-5">
    <EditForm Model="@invClassification" OnSubmit=@ValidFormSubmitted>
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="mb-3">
            <p class="text-warning"> @ValidationMsg  </p>
        </div>
        <div class="mb-3" hidden>
            <label> Id </label>
            <InputNumber class="form-control" @bind-Value=invClassification.Id id="Id" />
        </div>

        <div class="mb-3">
            <label> Description </label>
            <InputText class="form-control" @bind-Value=invClassification.Classification id="Description" />
        </div>

        <div class="mb-3">
            <input type="submit" value="Submit" class="btn btn-primary" />
        </div>
    </EditForm>
</div>


@code {
    InvClassification invClassification = new InvClassification();
    InvUom[] invUom;

    string ValidationMsg;

    //On page Initialize
    protected override async Task OnInitializedAsync()
    {

    }

    //On Submit Form
    private async Task ValidFormSubmitted(EditContext editContext)
    {
        //Post data to server
        var res = await Http.PostAsJsonAsync("api/InvClassifications", invClassification);

        //response & redirect to list
        if (res.IsSuccessStatusCode)
        {
            NavHelper.NavigateTo("/Classifications");
        }
        else
        {
            ValidationMsg = "Unable to Create new Classifications";
        }

        return;
    }


}

